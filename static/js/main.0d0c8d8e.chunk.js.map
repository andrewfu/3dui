{"version":3,"sources":["textures/1_nx.jpg","textures/1_ny.jpg","textures/1_nz.jpg","textures/1_px.jpg","textures/1_py.jpg","textures/1_pz.jpg","textures/microphone.png","components/with-sp-auth/pnp.js","components/with-sp-auth/with-sp-auth.jsx","config/config.js","components/with-sp-auth/index.js","components/scene3/skybox.js","components/scene3/ray-cast.js","utl/const.js","components/scene3/full-sceen-ui.js","utl/common.js","components/scene3/scene3.jsx","components/scene3/prepare.js","components/scene3/volume.js","components/scene3/base-mesh.js","components/scene3/index.js","components/scene3/scene3-container.js","components/speech/speech-control/speech-control.jsx","components/speech/speech-control/index.js","components/speech/index.js","components/speech/speech.jsx","components/startup/startup.jsx","data-adapters/list.js","actions/site.js","utl/actions.js","components/startup/index.js","components/startup/startup-container.js","reducers/index.js","reducers/site.js","components/app/store.js","components/app/index.js","components/app/app.jsx","index.js"],"names":["module","exports","PnPFetchClient","authContext","url","options","isUrlAbsolute","Error","this","getToken","getResource","token","resource","request","indexOf","scopes","acquireTokenSilent","response","accessToken","requiresInteraction","errorCode","acquireTokenRedirect","length","parser","document","createElement","href","protocol","hostname","BearerTokenFetchClient","msalInstance","UserAgentApplication","auth","authority","clientId","WithSpAuth","WrappedComponent","props","state","authenticated","renewIframe","hasError","errorMessage","handleRedirectCallback","setState","InitPnP","authErr","accountState","console","log","isCallback","window","location","hash","getAccount","loginRedirect","sp","setup","fetchClientFactory","baseUrl","React","files","px","py","pz","nx","ny","nz","meshFilter","scene","meta","ui","AdvancedDynamicTexture","CreateFullscreenUI","btn1","btn","Button","CreateSimpleButton","width","height","color","cornerRadius","background","alpha","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_BOTTOM","addControl","textBlock","CreateBottomPanel","line","Line","lineWidth","dash","isVisible","CreateLine","connectedControl","onPointerObservable","add","pointerInfo","type","PointerEventTypes","POINTERMOVE","mesh","ray","createPickingRay","pointerX","pointerY","Matrix","Identity","activeCameras","hit","pickWithRay","pickedMesh","findIndex","name","toUpperCase","RayCast","objMeta","find","i","id","text","title","linkWithMesh","GetRandomInt","seed","Math","ceil","random","Fetch","ServiceAction","dispatch","getState","a","serviceActionResult","payload","baseMeshes","sceneRef","Ready","startCameraPos","Vector3","camera","FreeCamera","attachControl","getEngine","getRenderingCanvas","angularSensibility","createDefaultLight","actionManager","ActionManager","Prepare","skybox","MeshBuilder","CreateBox","size","skyboxMaterial","StandardMaterial","backFaceCulling","reflectionTexture","CubeTexture","coordinatesMode","Texture","SKYBOX_MODE","diffuseColor","Color3","specularColor","material","CreateSkybox","CreateFullSceenUI","objects","xDim","yDim","distance","maxSize","maxItemsCount","max","map","count","instance","createInstance","x","y","z","position","s","scaling","instancedBuffers","Color4","CreateVolume","obj","CreateSphere","segments","diameter","registerInstancedBuffer","push","CreateBaseMeshes","Render","Scene3","lists","objectToSearch","useEffect","list","instances","absolutePosition","cameras","setTarget","getBoundingInfo","boundingBox","minimumWorld","Search","antialias","onSceneReady","onRender","connect","site","listsfetching","listsfetched","SVG","styled","svg","top","left","ICON","CIRCLE","circle","SpeechControl","start","TurnSpeech","innerHeight","onClick","cx","cy","r","textAnchor","Speech","GetCommand","useState","SetStart","useSpeechRecognition","transcript","startListening","stopListening","SpeechRecognition","language","value","GetLists","searchText","SetSearchText","Fragment","command","data","Title","ItemCount","Id","To3dMeta","web","get","Startup","bindActionCreators","combineReducers","sitefetching","sitefetched","action","createStore","reducer","applyMiddleware","thunk","createLogger","App","store","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d0c8d8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1_nx.6f124809.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_ny.a23cd0ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_nz.25825739.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_px.8050c1af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_py.62522803.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_pz.5b2a8580.jpg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.ca145fad.png\";","import { BearerTokenFetchClient, isUrlAbsolute } from \"@pnp/common\";\r\n\r\nexport class PnPFetchClient extends BearerTokenFetchClient {\r\n  constructor(authContext) {\r\n    super(null);\r\n    this.authContext = authContext;\r\n  }\r\n\r\n  async fetch(url, options = {}) {\r\n    if (!isUrlAbsolute(url)) {\r\n      throw new Error(\"You must supply absolute urls to PnPFetchClient.fetch.\");\r\n    }\r\n\r\n    const token = await this.getToken(this.getResource(url));\r\n    this.token = token;\r\n    return super.fetch(url, options);\r\n  }\r\n\r\n  async getToken(resource) {\r\n    const request = {};\r\n\r\n    if (resource.indexOf(\"sharepoint\") !== -1) {\r\n      request.scopes = [`${resource}/AllSites.Read`];\r\n    } else if (resource.indexOf(\"graph\") !== -1) {\r\n      request.scopes = [\r\n        `${resource}/Group.Read.All`,\r\n        `${resource}/User.Read`,\r\n        `${resource}/profile`,\r\n      ];\r\n    }\r\n\r\n    try {\r\n      const response = await this.authContext.acquireTokenSilent(request);\r\n\r\n      return response.accessToken;\r\n    } catch (error) {\r\n      if (this.requiresInteraction(error.errorCode)) {\r\n        this.authContext.acquireTokenRedirect(request);\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  requiresInteraction(errorCode) {\r\n    if (!errorCode || !errorCode.length) {\r\n      return false;\r\n    }\r\n    return (\r\n      errorCode === \"consent_required\" ||\r\n      errorCode === \"interaction_required\" ||\r\n      errorCode === \"login_required\"\r\n    );\r\n  }\r\n\r\n  getResource(url) {\r\n    const parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return `${parser.protocol}//${parser.hostname}`;\r\n  }\r\n}\r\n","import { sp } from \"@pnp/sp\";\r\nimport * as React from \"react\";\r\n\r\nimport config, { siteUrl } from \"../../config/config\";\r\nimport { PnPFetchClient } from \"./pnp\";\r\nimport { UserAgentApplication } from \"msal\";\r\n\r\nexport const msalInstance = new UserAgentApplication({ auth: config });\r\n\r\nexport default function withAuth(WrappedComponent) {\r\n  return class Auth extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authenticated: false,\r\n        renewIframe: false,\r\n        hasError: false,\r\n        errorMessage: null,\r\n      };\r\n    }\r\n\r\n    componentWillMount() {\r\n      msalInstance.handleRedirectCallback(\r\n        () => {\r\n          this.setState({\r\n            authenticated: true,\r\n          });\r\n          this.InitPnP();\r\n        },\r\n        (authErr, accountState) => {\r\n          console.log(authErr);\r\n          this.setState({\r\n            hasError: true,\r\n            errorMessage: authErr.errorMessage,\r\n          });\r\n        }\r\n      );\r\n\r\n      if (msalInstance.isCallback(window.location.hash)) {\r\n        this.setState({\r\n          renewIframe: true,\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!msalInstance.getAccount()) {\r\n        msalInstance.loginRedirect({});\r\n        return;\r\n      } else {\r\n        this.setState({ authenticated: true });\r\n        this.InitPnP();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.renewIframe) {\r\n        return <div>hidden renew iframe - not visible</div>;\r\n      }\r\n\r\n      if (this.state.authenticated) {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n\r\n      if (this.state.hasError) {\r\n        return <div>{this.state.errorMessage}</div>;\r\n      }\r\n\r\n      return <div>Login in progress...</div>;\r\n    }\r\n\r\n    InitPnP() {\r\n      console.log(`init pnp`);\r\n      const fetchClientFactory = () => new PnPFetchClient(msalInstance);\r\n      sp.setup({ sp: { fetchClientFactory, baseUrl: siteUrl } });\r\n    }\r\n  };\r\n}\r\n","export default {\r\n  authority: \"https://login.microsoftonline.com/8f2729c9-155b-42ae-99a6-6c8dd2e286d5\",\r\n  clientId: \"993dcb6f-07c4-41dc-b789-0185c110408e\",\r\n};\r\n\r\nexport const siteUrl = \"https://openpoint.sharepoint.com\";\r\n","import WithSpAuth from \"./with-sp-auth\";\r\nexport default WithSpAuth;","import { StandardMaterial, CubeTexture, Color3, MeshBuilder, Texture } from \"@babylonjs/core\";\r\n\r\nimport nx from \"../../textures/1_nx.jpg\";\r\nimport ny from \"../../textures/1_ny.jpg\";\r\nimport nz from \"../../textures/1_nz.jpg\";\r\nimport px from \"../../textures/1_px.jpg\";\r\nimport py from \"../../textures/1_py.jpg\";\r\nimport pz from \"../../textures/1_pz.jpg\";\r\n\r\nconst files = [px, py, pz, nx, ny, nz];\r\n\r\nexport default (scene) => {\r\n  var skybox = MeshBuilder.CreateBox(\"skyBox\", { size: 1000.0 }, scene);\r\n  var skyboxMaterial = new StandardMaterial(\"skyBox\", scene);\r\n  skyboxMaterial.backFaceCulling = false;\r\n  skyboxMaterial.reflectionTexture = new CubeTexture(\"\", scene, null, false, files);\r\n  skyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n  skyboxMaterial.diffuseColor = new Color3(0, 0, 0);\r\n  skyboxMaterial.specularColor = new Color3(0, 0, 0);\r\n  skybox.material = skyboxMaterial;\r\n};\r\n","import { Matrix } from \"@babylonjs/core\";\r\nimport { SKYBOX } from \"../../utl/const\";\r\n\r\nconst meshFilter = [SKYBOX];\r\n\r\nexport default (scene) => {\r\n  const ray = scene.createPickingRay(\r\n    scene.pointerX,\r\n    scene.pointerY,\r\n    Matrix.Identity(),\r\n    scene.activeCameras[0]\r\n  );\r\n  const hit = scene.pickWithRay(ray);\r\n  if (\r\n    hit.pickedMesh &&\r\n    meshFilter.findIndex((name) => name.toUpperCase() == hit.pickedMesh.name.toUpperCase()) == -1\r\n  )\r\n    return hit.pickedMesh;\r\n  return null;\r\n};\r\n","export const DATA_TYPE_LIST = \"SP.List\";\r\n\r\nexport const COLOR_BUFFER = \"color\";\r\n\r\nexport const BASE_SPHERE = \"baseSphere\";\r\nexport const BASE_CUBE = \"baseCube\";\r\nexport const SKYBOX = \"skyBox\";\r\n","import { PointerEventTypes } from \"@babylonjs/core\";\r\nimport { AdvancedDynamicTexture, Line, Control, Button } from \"@babylonjs/gui\";\r\nimport RayCast from \"./ray-cast\";\r\n\r\nconst CreateBottomPanel = (ui) => {\r\n  const btn = Button.CreateSimpleButton(\"but\");\r\n  btn.width = \"350px\";\r\n  btn.height = \"40px\";\r\n  btn.color = \"white\";\r\n  btn.cornerRadius = 20;\r\n  btn.background = \"green\";\r\n  btn.alpha = \"0.5\";\r\n  btn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  btn.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n  ui.addControl(btn);\r\n  return btn.textBlock;\r\n};\r\n\r\nconst CreateLine = (ui) => {\r\n  const line = new Line();\r\n  line.alpha = 0.5;\r\n  line.lineWidth = 5;\r\n  line.dash = [5, 10];\r\n  line.isVisible = false;\r\n  ui.addControl(line);\r\n  return line;\r\n};\r\n\r\nexport default (scene, meta) => {\r\n  var ui = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n  const btn1 = CreateBottomPanel(ui);\r\n  const line = CreateLine(ui);\r\n  line.connectedControl = btn1;\r\n\r\n  scene.onPointerObservable.add((pointerInfo) => {\r\n    if (pointerInfo.type == PointerEventTypes.POINTERMOVE) {\r\n      const mesh = RayCast(scene);\r\n      if (mesh) {\r\n        //const length = Math.ceil(mesh.position.subtract(scene.cameras[0].position).length());\r\n        const objMeta = meta.find((i) => mesh.name == i.id);\r\n        btn1.text = objMeta.title;\r\n        line.linkWithMesh(mesh);\r\n        line.isVisible = true;\r\n      } else {\r\n        btn1.text = \"\";\r\n        line.isVisible = false;\r\n        line.linkWithMesh(null);\r\n      }\r\n    }\r\n  });\r\n};\r\n","export const GetRandomInt = (seed) => Math.ceil(Math.random() * seed);\r\n\r\nexport const Fetch = ({ type, ServiceAction }) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type });\r\n    try {\r\n      const serviceActionResult = await ServiceAction(getState);\r\n      dispatch({\r\n        type: `${type}_SUCCESS`,\r\n        payload: serviceActionResult,\r\n      });\r\n      return serviceActionResult;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: `${type}_ERROR`,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport SceneComponent from \"babylonjs-hook\";\r\n\r\nimport Prepare from \"./prepare\";\r\nimport CreateSkybox from \"./skybox\";\r\nimport CreateFullSceenUI from \"./full-sceen-ui\";\r\nimport CreateBaseMeshes from \"./base-mesh\";\r\nimport CreateVolume from \"./volume\";\r\nimport SetupPointerLock from \"./pointer-lock\";\r\nimport { useEffect } from \"react\";\r\nimport { Vector3 } from \"@babylonjs/core\";\r\n\r\nlet baseMeshes = null;\r\nlet meta = null;\r\nlet sceneRef = null;\r\nconst Ready = (scene) => {\r\n  sceneRef = scene;\r\n  const { camera, startCameraPos } = Prepare(scene);\r\n  CreateSkybox(scene);\r\n  CreateFullSceenUI(scene, meta);\r\n  baseMeshes = CreateBaseMeshes();\r\n\r\n  CreateVolume({ baseMeshes, objects: meta, xDim: 3, yDim: 3 });\r\n\r\n  //SetupPointerLock(scene);\r\n\r\n  /*scene.onPointerDown = () => {\r\n    if (!isLocked) {\r\n      canvas.requestPointerLock =\r\n        canvas.requestPointerLock ||\r\n        canvas.msRequestPointerLock ||\r\n        canvas.mozRequestPointerLock ||\r\n        canvas.webkitRequestPointerLock;\r\n      if (canvas.requestPointerLock) {\r\n        canvas.requestPointerLock();\r\n      }\r\n    }\r\n    var ray = scene.createPickingRay(scene.pointerX, scene.pointerY, Matrix.Identity(), camera);\r\n    var hit = scene.pickWithRay(ray);\r\n    let target = hit.pickedMesh;\r\n    if (target && target.name != \"skyBox\") {\r\n      const countToDelete = activeObj.instances.length;\r\n      for (let i = 0; i < countToDelete; i++) {\r\n        activeObj.instances[activeObj.instances.length - 1].dispose();\r\n      }\r\n      CreateVolume(activeObj);\r\n      camera.position = startCameraPos;\r\n      line.isVisible = false;\r\n    }\r\n  };*/\r\n};\r\nconst Search = (text) => {\r\n  if (text.length <= 2) return;\r\n  const list = meta.find((i) => i.name.toUpperCase().indexOf(text.toUpperCase()) > -1);\r\n  if (list && baseMeshes.length > 0) {\r\n    const instance = baseMeshes[0].instances.find((i) => i.name == list.id);\r\n    const position = instance.absolutePosition;\r\n    //console.log(instance.getBoundingInfo().boundingBox);\r\n    //console.log(instance.getBoundingInfo().boundingBox.centerWorld);\r\n\r\n    //sceneRef.cameras[0].position.x = instance.position.x;\r\n    //sceneRef.cameras[0].position.y = instance.position.y;\r\n    //sceneRef.cameras[0].position = instance.position.add(new Vector3(0, 0, 5)); //instance.getBoundingInfo().boundingBox.maximumWorld; //new Vector3(position.x - 10, position.y - 10, position.z - 10);\r\n    sceneRef.cameras[0].setTarget(instance.getBoundingInfo().boundingBox.minimumWorld);\r\n    //console.log(instance.position.z);\r\n    //console.log(sceneRef.cameras[0].position.z);\r\n    //sceneRef.cameras[0].radius = 1;\r\n    //sceneRef.cameras[0].target = instance.position;\r\n  }\r\n};\r\n\r\nconst Render = (scene) => {};\r\n\r\nconst Scene3 = ({ lists, objectToSearch }) => {\r\n  meta = lists;\r\n  useEffect(() => {\r\n    objectToSearch && Search(objectToSearch);\r\n  }, [objectToSearch]);\r\n  return (\r\n    <SceneComponent\r\n      antialias\r\n      onSceneReady={(scene) => Ready(scene, lists)}\r\n      onRender={Render}\r\n      id=\"my-canvas\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Scene3;\r\n","import { Vector3, FreeCamera, ActionManager } from \"@babylonjs/core\";\r\n\r\nexport default (scene) => {\r\n  const startCameraPos = new Vector3(30, 15, -100);\r\n  var camera = new FreeCamera(\"camera1\", startCameraPos, scene);\r\n  camera.attachControl(scene.getEngine().getRenderingCanvas(), true);\r\n  camera.angularSensibility = 5000;\r\n  scene.createDefaultLight();\r\n  scene.actionManager = new ActionManager(scene);\r\n  return { camera, startCameraPos };\r\n};\r\n","import { GetRandomInt } from \"../../utl/common\";\r\nimport { Vector3, Color4 } from \"@babylonjs/core\";\r\n\r\nexport default ({\r\n  baseMeshes,\r\n  objects = [],\r\n  xDim = GetRandomInt(10),\r\n  yDim = GetRandomInt(10),\r\n  distance = 20,\r\n  maxSize = 5,\r\n}) => {\r\n  const maxItemsCount = Math.max(...objects.map((i) => i.count));\r\n  for (let i = 0; i < objects.length; i++) {\r\n    let instance = baseMeshes[0].createInstance(objects[i].id);\r\n    const x = i % xDim;\r\n    const y = ((i - x) / xDim) % yDim;\r\n    const z = ((i - x) / xDim - y) / yDim;\r\n    instance.position.x = x * distance;\r\n    instance.position.y = y * distance;\r\n    instance.position.z = z * distance;\r\n    let s = Math.ceil((objects[i].count / maxItemsCount) * maxSize);\r\n    s = s == 0 ? 1 : s;\r\n    instance.scaling = new Vector3(s, s, s);\r\n    instance.instancedBuffers.color = new Color4(\r\n      Math.random(),\r\n      Math.random(),\r\n      Math.random(),\r\n      Math.random()\r\n    );\r\n  }\r\n};\r\n","import { MeshBuilder, Color4, DynamicTexture, StandardMaterial, Mesh } from \"@babylonjs/core\";\r\nimport { COLOR_BUFFER, BASE_CUBE, BASE_SPHERE } from \"../../utl/const\";\r\n\r\n//import folder from \"../../textures/folder.png\";\r\n\r\nexport default () => {\r\n  const baseMeshes = [];\r\n  let obj = MeshBuilder.CreateSphere(BASE_SPHERE, { segments: 16, diameter: 2 });\r\n  //obj.billboardMode = Mesh.BILLBOARDMODE_ALL;\r\n\r\n  /*var size = 512;\r\n  var textureGround = new DynamicTexture(\"dynamic texture\", size);\r\n  var textureContext = textureGround.getContext();\r\n\r\n  var materialGround = new StandardMaterial(\"Mat\");\r\n  materialGround.diffuseTexture = textureGround;\r\n  obj.material = materialGround;*/\r\n\r\n  /*var img = new Image();\r\n  img.src = folder;\r\n  img.onload = function () {\r\n    textureContext.drawImage(this, 0,0,512,512);\r\n    textureGround.update();\r\n  };*/\r\n\r\n  obj.isVisible = false;\r\n\r\n  obj.registerInstancedBuffer(COLOR_BUFFER, 4);\r\n  obj.instancedBuffers[COLOR_BUFFER] = new Color4(1, 1, 1, 1);\r\n  baseMeshes.push(obj);\r\n  return baseMeshes;\r\n};\r\n","import Scene3 from \"./scene3-container\";\r\nexport default Scene3;\r\n","import { connect } from \"react-redux\";\r\nimport Scene3 from \"./scene3\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lists: state.site.lists,\r\n    listsfetching: state.site.listsfetching,\r\n    listsfetched: state.site.listsfetched,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Scene3);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as micOn from \"../../../textures/microphone.png\";\r\n\r\nconst SVG = styled.svg`\r\n  cursor: pointer;\r\n  text:hover {\r\n    cursor: pointer;\r\n  }\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n  position: absolute;\r\n  opacity: 0.5;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst ICON = styled.text`\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst CIRCLE = styled.circle`\r\n  fill: lightblue;\r\n`;\r\n\r\nconst SPeechControl = ({ start, TurnSpeech }) => {\r\n  return (\r\n    <SVG\r\n      top={`${window.innerHeight - 180}px`}\r\n      left=\"20px\"\r\n      height=\"44px\"\r\n      width=\"44px\"\r\n      onClick={() => TurnSpeech(!start)}\r\n    >\r\n      <CIRCLE cx=\"50%\" cy=\"50%\" r=\"22\" />\r\n      <ICON textAnchor=\"middle\" x=\"50%\" y=\"70%\">\r\n        {start ? \"On\" : \"Off\"}\r\n      </ICON>\r\n    </SVG>\r\n  );\r\n};\r\n\r\nexport default SPeechControl;\r\n","import SpeechControl from \"./speech-control\";\r\nexport default SpeechControl;\r\n","import Speech from \"./speech\";\r\nexport default Speech;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\nimport SpeechControl from \"./speech-control\";\r\n\r\nconst Speech = ({ GetCommand }) => {\r\n  const [start, SetStart] = useState(false);\r\n  const { transcript, startListening, stopListening } = useSpeechRecognition();\r\n  useEffect(() => {\r\n    if (start) SpeechRecognition.startListening({ language: \"en-US\" });\r\n    else {\r\n      SpeechRecognition.stopListening();\r\n    }\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      console.log(transcript);\r\n      GetCommand(transcript);\r\n      SetStart(false);\r\n    }\r\n  }, [transcript]);\r\n\r\n  return <SpeechControl start={start} TurnSpeech={(value) => SetStart(value)} />;\r\n};\r\n\r\nexport default Speech;\r\n","import React from \"react\";\r\nimport WithSpAuth from \"../with-sp-auth\";\r\nimport { msalInstance } from \"../with-sp-auth/with-sp-auth\";\r\nimport Scene3 from \"../scene3\";\r\nimport { useState } from \"react\";\r\nimport Speech from \"../speech\";\r\n\r\nexport default WithSpAuth(({ GetLists, listsfetching, listsfetched }) => {\r\n  const [searchText, SetSearchText] = useState(\"\");\r\n  if (!listsfetching && !listsfetched) GetLists();\r\n  if (listsfetched) {\r\n    return (\r\n      <React.Fragment>\r\n        <Speech GetCommand={(command) => SetSearchText(command)} />\r\n        <Scene3 objectToSearch={searchText} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n});\r\n","export default (data) => {\r\n  return data.map((list) => ({\r\n    title: `${list.Title} (${list.ItemCount})`,\r\n    name: list.Title,\r\n    count: list.ItemCount,\r\n    id: list.Id,\r\n  }));\r\n};\r\n","import * as Actions from \"../utl/actions\";\r\nimport { Fetch } from \"../utl/common\";\r\nimport { sp } from \"@pnp/sp\";\r\nimport \"@pnp/sp/webs\";\r\nimport \"@pnp/sp/lists\";\r\nimport To3dMeta from \"../data-adapters/list\";\r\nimport { DATA_TYPE_LIST } from \"../utl/const\";\r\n\r\nexport const GetLists = () =>\r\n  Fetch({\r\n    type: Actions.FETCH_LISTS,\r\n    ServiceAction: async () => To3dMeta(await sp.web.lists.get()),\r\n  });\r\n\r\nexport const GetSite = () =>\r\n  Fetch({\r\n    type: Actions.FETCH_SITE,\r\n    ServiceAction: async () => await sp.web.get(),\r\n  });\r\n","export const FETCH_LISTS = \"FETCH_LISTS\";\r\nexport const FETCH_SITE = \"FETCH_SITE\";\r\n","import Startup from \"./startup-container\";\r\nexport default Startup;\r\n","import { connect } from \"react-redux\";\r\nimport Startup from \"./startup\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { GetLists } from \"../../actions/site\";\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ GetLists }, dispatch);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listsfetching: state.site.listsfetching,\r\n    listsfetched: state.site.listsfetched,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Startup);\r\n","import { combineReducers } from \"redux\";\r\nimport site from \"./site\";\r\nexport default combineReducers({ site });\r\n","import * as Actions from \"../utl/actions\";\r\n\r\nexport default (\r\n  state = {\r\n    title: \"\",\r\n    sitefetching: false,\r\n    sitefetched: false,\r\n    lists: [],\r\n    listsfetching: false,\r\n    listsfetched: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case Actions.FETCH_LISTS:\r\n      return {\r\n        ...state,\r\n        listsfetched: false,\r\n        listsfetching: true,\r\n      };\r\n    case `${Actions.FETCH_LISTS}_SUCCESS`:\r\n      return {\r\n        ...state,\r\n        listsfetched: true,\r\n        listsfetching: false,\r\n        lists: action.payload,\r\n      };\r\n    case Actions.FETCH_SITE:\r\n      return {\r\n        ...state,\r\n        sitefetching: true,\r\n        sitefetched: false,\r\n      };\r\n    case `${Actions.FETCH_SITE}_SUCCESS`:\r\n      return {\r\n        ...state,\r\n        sitefetching: false,\r\n        sitefetched: true,\r\n        title: action.payload.Title,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../../reducers\";\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk, createLogger()));\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from \"react\";\r\nimport Startup from \"../startup\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Startup />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}